from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import secrets


def login(driver):
    driver.get('https://cronometer.com/login/')
    user_ele = driver.find_element_by_name('username')
    pass_ele = driver.find_element_by_name('password')
    user_ele.send_keys(secrets.u)
    pass_ele.send_keys(secrets.p)

    submit_button = driver.find_element_by_id('login-button')
    submit_button.click()


def wait_on_element(driver, locator):
    WebDriverWait(driver, 3).until(EC.presence_of_element_located(locator))


def robust_click(element, driver):
    """
    Sometimes the "Subscribe to Cronometer Gold" dialog pops up, which can
    block a Selenium mouse click. If this will close that dialog before trying
    to click the given element.
    """
    element.click()
    # TODO once we get the modal, refactor the following code to not use
    # autogenerated class names.
    # try:
        # element.click()
    # except ElementClickInterceptedException:
        # # close dialog
        # cancel_button = driver.find_element_by_class_name('GHDCC5OBEIC')
        # cancel_button.click()
        # print('Closed subscription popup dialog!')

        # # retry clicking the element
        # element.click()
